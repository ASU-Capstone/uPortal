<?xml version="1.0" encoding="UTF-8"?>
<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<flow xmlns="http://www.springframework.org/schema/webflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/webflow
    http://www.springframework.org/schema/webflow/spring-webflow-2.0.xsd">
    
    <!-- 
     | Channel input 
     |
     | The channel object should be an instance of ChannelDefinitionForm that
     | represents either a new or existing channel definition.  This object
     | may not be null.
     +-->
    <input name="channel"/>
    
    <!-- Initialize a list of available channel types -->
    <on-start>
        <set name="flowScope.channelTypes" 
            value="channelPublishingDefinitionDao.getChannelPublishingDefinitions()"/>
        <set name="flowScope.completed" value="channel.id > 0"/>
    </on-start>
    
    <!-- If we're creating a new portlet, display the first step in the workflow.
        Otherwise, display the portlet summary view. --> 
    <decision-state id="isPortletNew">
        <if test="completed" then="reviewPortlet" else="chooseType"/>
    </decision-state>
        
    <!-- CHANNEL TYPE view -->
    <view-state id="chooseType" model="channel">
        <transition on="next" to="afterChooseType">
            <!-- Set default parameters based on channel type -->
            <set name="flowScope.cpd" 
                value="channelPublishingDefinitionDao.getChannelPublishingDefinition(channel.typeId)"/>
            <evaluate expression="channel.setChannelPublishingDefinition(cpd)"/>
        </transition>
    </view-state>
    
    <decision-state id="afterChooseType">
        <if test="portletAdministrationHelper.offerPortletSelection(channel)" 
            then="choosePortlet" else="basicInfo"/>
    </decision-state>
    
    <view-state id="choosePortlet">
        <on-render>
            <set name="flashScope.contexts" value="portletAdministrationHelper.getPortletApplications()"/>
        </on-render>
        <transition on="next" to="basicInfo" validate="false" bind="false">
            <evaluate expression="portletAdministrationHelper.prepopulatePortlet(requestParameters.application, requestParameters.portlet, channel)"/>
        </transition>
        <transition on="back" to="chooseType" validate="false"/>
    </view-state>
    
    <!-- BASIC INFO view (title, fname, etc.) -->
    <view-state id="basicInfo" model="channel">
        <transition on="back" to="chooseType" validate="false"/>
        <transition on="next" to="setParameters"/>
    </view-state>
    
    <!-- CHANNEL PARAMETERS view -->
    <view-state id="setParameters" model="channel">
        <on-entry>
            <set name="flowScope.supportsConfig" value="portletAdministrationHelper.supportsConfigMode(channel)"/>
        </on-entry>
        <on-render>
            <set name="flashScope.portlet" value="portletAdministrationHelper.getPortletDescriptor(channel)"/>
            <set name="flashScope.arbitraryPreferenceNames" value="portletAdministrationHelper.getArbitraryPortletPreferenceNames(channel)"/>
        </on-render>
        <transition on="back" to="basicInfo" validate="false">
            <evaluate expression="portletAdministrationHelper.cleanOptions(channel, externalContext.getNativeRequest())"/>
        </transition>
        <transition on="next" to="chooseCategory">
            <evaluate expression="portletAdministrationHelper.cleanOptions(channel, externalContext.getNativeRequest())"/>
        </transition>
        <transition on="review" to="reviewPortlet">
            <evaluate expression="portletAdministrationHelper.cleanOptions(channel, externalContext.getNativeRequest())"/>
        </transition>
    </view-state>
    
    <!-- CATEGORIES view -->
    <subflow-state id="chooseCategory" subflow="groups-selector">
        <on-entry>
            <set name="flashScope.entityTypes" value="new java.util.HashSet()"/>
            <evaluate expression="entityTypes.add('category')"/>
            <set name="flashScope.rootEntity" value="groupListHelper.getEntity('category', 'local.1', false)"/>
        </on-entry>
        <!-- View Parameters -->
        <input name="selectTypes" value="entityTypes"/>
        <input name="selectMultiple" value="true"/>
        <input name="rootEntity" value="rootEntity"/>

        <input name="showCancelButton" value="true"/>
        <input name="showBackButton" value="!completed"/>
        <input name="saveButtonCode" value="completed ? 'edit-portlet.reviewButton' : 'edit-portlet.nextButton'" />
        <input name="backButtonCode" value="'edit-portlet.backButton'" />
        <input name="cancelButtonCode" value="'edit-portlet.cancelButton'" />
        <input name="pageTitleCode" value="'edit-portlet.selectCategories'"/>
        <input name="pageSubtitleCode" value="'edit-portlet.categorySubtitle'" />
        <input name="pageSubtitleChannelName" value="channel.name != '' ? channel.name : 'this portlet'" />
        
        <!-- Group input/output mapping -->
        <input name="selectedGroups" value="channel.categories"/>
        <output name="selectedGroups" value="channel.categories"/>
        
        <transition on="back" to="setParameters"/>
        <transition on="finish" to="chooseCategoryNextScreen"/>
    </subflow-state>
    
    <decision-state id="chooseCategoryNextScreen">
        <if test="completed" then="reviewPortlet" else="chooseGroup"/>
    </decision-state>
        
    <!-- GROUPS view -->
    <subflow-state id="chooseGroup" subflow="groups-selector">
        <on-entry>
            <set name="flashScope.entityTypes" value="new java.util.HashSet()"/>
            <evaluate expression="entityTypes.add('person')"/>
            <evaluate expression="entityTypes.add('group')"/>
            <set name="flashScope.rootEntity" value="groupListHelper.getEntity('group', 'local.0', false)"/>
        </on-entry>
        <!-- View Parameters -->
        <input name="selectTypes" value="entityTypes"/>
        <input name="selectMultiple" value="true"/>
        <input name="rootEntity" value="rootEntity"/>
        
        <input name="showCancelButton" value="true"/>
        <input name="showBackButton" value="!completed"/>
        <input name="saveButtonCode" value="completed ? 'edit-portlet.reviewButton' : 'edit-portlet.nextButton'" />
        <input name="backButtonCode" value="'edit-portlet.backButton'" />
        <input name="cancelButtonCode" value="'edit-portlet.cancelButton'" />
        <input name="pageTitleCode" value="'edit-portlet.selectPag'"/>
        <input name="pageSubtitleCode" value="'edit-portlet.pagSubtitle'" />
        <input name="pageSubtitleChannelName" value="channel.name != '' ? channel.name : 'this portlet'" />

        <!-- Group input/output mapping -->
        <input name="selectedGroups" value="channel.groups"/>
        <output name="selectedGroups" value="channel.groups"/>
        
        <transition on="back" to="chooseCategory"/>
        <transition on="finish" to="chooseGroupNextScreen"/>
    </subflow-state>

    <decision-state id="chooseGroupNextScreen">
        <if test="completed" then="reviewPortlet" else="lifecycle"/>
    </decision-state>
        
    <!-- Lifecycle Management -->
    <view-state id="lifecycle" model="channel">
        <binder>
            <binding property="lifecycleState"/>
            <binding property="publishHour"/>
            <binding property="publishMinute"/>
            <binding property="publishAmPm"/>
            <binding property="expirationHour"/>
            <binding property="expirationMinute"/>
            <binding property="expirationAmPm"/>
            <binding property="publishDate" converter="date"/>
            <binding property="expirationDate" converter="date"/>
        </binder>
        <on-entry>
            <set name="flashScope.servletRequest" 
                value="portalRequestUtils.getOriginalPortalRequest(externalContext.getNativeRequest())"/>
            <set name="flashScope.person" 
                value="personManager.getPerson(servletRequest)"/>
            <set name="viewScope.lifecycleStates" value="portletAdministrationHelper.getAllowedLifecycleStates(person, channel.categories)"/>
        </on-entry>
        <transition on="back" to="chooseGroup" validate="false"/>
        <transition on="next" to="reviewPortlet">
            <set name="completed" value="true"/>
        </transition>
    </view-state>

    <!-- REVIEW PORTLET view -->
    <view-state id="reviewPortlet">
        <on-entry>
            <set name="flowScope.cpd" 
                value="channelPublishingDefinitionDao.getChannelPublishingDefinition(channel.typeId)"/>
            <set name="flowScope.supportsConfig" value="portletAdministrationHelper.supportsConfigMode(channel)"/>
        </on-entry>
        <!-- done in flash scope since portlet preference objects are not serializable -->
        <on-render>
            <set name="flashScope.portlet" value="portletAdministrationHelper.getPortletDescriptor(channel)"/>
            <set name="flashScope.arbitraryPreferenceNames" value="portletAdministrationHelper.getArbitraryPortletPreferenceNames(channel)"/>
        </on-render>
        
        
        <!-- edit transitions -->
        <transition on="basicInfo" to="basicInfo"/>
        <transition on="chooseType" to="chooseType"/>
        <transition on="configMode" to="configMode"/>
        <transition on="setParameters" to="setParameters"/>
        <transition on="chooseCategory" to="chooseCategory"/>
        <transition on="chooseGroup" to="chooseGroup"/>
        <transition on="lifecycle" to="lifecycle"/>

        <!-- save the portlet -->
        <transition on="save" to="finishPortletEdit">
            <set name="flashScope.servletRequest" 
                value="portalRequestUtils.getOriginalPortalRequest(externalContext.getNativeRequest())"/>
            <set name="flashScope.person" 
                value="personManager.getPerson(servletRequest)"/>
            <evaluate expression="portletAdministrationHelper.savePortletRegistration(channel, person)"></evaluate>
        </transition>

        <!-- save the portlet -->
        <transition on="saveAndConfig" to="configMode">
            <set name="flashScope.servletRequest" 
                value="portalRequestUtils.getOriginalPortalRequest(externalContext.getNativeRequest())"/>
            <set name="flashScope.person" 
                value="personManager.getPerson(servletRequest)"/>
            <set name="flowScope.channel" value="portletAdministrationHelper.savePortletRegistration(channel, person)" />
        </transition>
        
        <!-- cancel our portlet edit and exit the sub-flow -->
        <transition on="cancel" to="cancelPortletEdit" bind="false"/>
    </view-state>
    
    <action-state id="configModeAction">
        <set name="flashScope.configComplete" value="portletAdministrationHelper.configModeAction(externalContext, channel.getFname())" />
        <transition to="configMode" on="${!flashScope.configComplete}" />
        <transition to="reviewPortlet" on="${flashScope.configComplete}">
            <set name="flowScope.channel" value="portletAdministrationHelper.getChannelDefinitionForm(channel.id)"/>
        </transition>
    </action-state>
    
    <view-state id="configMode">
        <on-render>
            <set name="flashScope.CHANNEL_FNAME" value="channel.getFname()"/>
        </on-render>
        <transition on="configModeAction" to="configModeAction" />
    </view-state>

    <decision-state id="cancelEditScreen">
        <if test="completed" then="reviewPortlet" else="cancelPortletEdit"/>
    </decision-state>

    <end-state id="cancelPortletEdit" />
    <end-state id="finishPortletEdit" />
    
    <global-transitions>
        <transition on="update" to="reviewPortlet"/>
        <transition on="review" to="reviewPortlet"/>
        <transition on="cancel" to="cancelEditScreen" bind="false"/>
        <transition on="cancelPortletEdit" to="cancelPortletEdit"/>
    </global-transitions>

</flow>
