<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<!--
 | NOTICE:  This file represents a contractual API that is leveraged by more 
 | than one caller.  Please do not refactor this file in a way that changes 
 | the number or nature of arguments expected.
 |
 | These are:
 |   - ${USER_NAME}=the identifier of the entity to export
 |   - ${PROFILE_FNAME}=the functional name of the profile to export
 +-->
<with-attribute key="PROFILE_KEY_PARTS" value="${groovy(new HashMap())}">
    <groovy>
        <script>
            keyParts = PROFILE_KEY.split("\\|");
            PROFILE_KEY_PARTS.put("USER_NAME", keyParts[0]);
            PROFILE_KEY_PARTS.put("PROFILE_FNAME", keyParts[1]);
        </script>
        <subtasks>
            <with>
                <attribute key="USER_NAME">${groovy(PROFILE_KEY_PARTS.get('USER_NAME'))}</attribute>
                <attribute key="PROFILE_FNAME">${groovy(PROFILE_KEY_PARTS.get('PROFILE_FNAME'))}</attribute>
                <subtasks>
                    <with>
                        <attribute key="Attributes.NODE">${newDoc(profile)}</attribute>
                        <attribute key="USER_ID">${sql(SELECT user_id FROM up_user WHERE user_name = '${USER_NAME}')}</attribute>
                        <subtasks>
                        <!--  getStylesheetDescriptor -->
                            <append-node node="${attributeNode(script=classpath://org/jasig/portal/io/import-profile_v3-2.crn)}"/>
                            <append-node node="${attributeNode(username=${USER_NAME})}"/>
                            <sql-query>
                                <sql>
                                    SELECT upup.*, upss.ss_name AS structure_name, upst.ss_name AS theme_name 
                                    FROM up_user_profile upup
                                        LEFT JOIN up_ss_struct upss ON upup.structure_ss_id = upss.ss_id
                                        LEFT JOIN up_ss_theme upst ON upup.theme_ss_id = upst.ss_id
                                    WHERE UPUP.USER_ID = ? AND upup.profile_fname = ?
                                </sql>
                                <parameter value="${USER_ID}"/>
                                <parameter value="${PROFILE_FNAME}"/>
                                <subtasks>
                                    <append-node>
                                        <name>${PROFILE_NAME}</name>
                                        <fname>${PROFILE_FNAME}</fname>  
                                        <description>${DESCRIPTION}</description>  
                                        <structure name="${STRUCTURE_NAME}"/>  
                                        <theme name="${THEME_NAME}"/> 
                                    </append-node>
                                    <sql-query>
                                        <sql>
                                            select param_name, param_val, ss_type
                                            from UP_SS_USER_PARM 
                                            where user_id=? and profile_id=? and ((ss_id=? and ss_type=1) or (ss_id=? and ss_type=2))
                                        </sql>
                                        <parameter value="${USER_ID}"/>
                                        <parameter value="${PROFILE_ID}"/>                    
                                        <parameter value="${STRUCTURE_SS_ID}"/>
                                        <parameter value="${THEME_SS_ID}"/>
                                        <subtasks>
                                            <choose>
                                                <!-- type=1 for structure parameters -->
                                                <when test="${jexl(SS_TYPE == 1)}">
                                                    <append-node parent="${singleNode(structure)}">
                                                        <parameter>
                                                            <name>${PARAM_NAME}</name>
                                                            <value>${PARAM_VAL}</value>
                                                        </parameter>
                                                    </append-node>
                                                </when>
                                                <!-- type=2 for theme parameters -->
                                                <when test="${jexl(SS_TYPE == 2)}">
                                                    <append-node parent="${singleNode(theme)}">
                                                        <parameter>
                                                            <name>${PARAM_NAME}</name>
                                                            <value>${PARAM_VAL}</value>
                                                        </parameter>
                                                    </append-node>
                                                </when>
                                            </choose>
                                        </subtasks>
                                    </sql-query>
                                    <return value="${Attributes.NODE}"/>
                                </subtasks>
                            </sql-query>
                        </subtasks>
                    </with>
                </subtasks>
            </with>
        </subtasks>
    </groovy>
</with-attribute>
