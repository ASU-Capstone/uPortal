<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<with>
    <attribute key="entityType">${groovy(WebAttributes.REQUEST.getParameter('entityType'))}</attribute>
    <attribute key="sysid">${groovy(WebAttributes.REQUEST.getParameter('sysid'))}</attribute>
    <attribute key="SqlAttributes.DATA_SOURCE">${groovy(org.jasig.portal.RDBMServices.getDataSource())}</attribute>
    <subtasks>
    
        <groovy>
            <script>
                WebAttributes.RESPONSE.setRenderParameter('operation', 'delete');
                WebAttributes.RESPONSE.setRenderParameter('result', 'SUCCESS');
            </script>
        </groovy>
    
        <sql-transaction>

            <choose>

                <!-- layouts -->
                <when test="${jexl(entityType.equalsIgnoreCase('layout'))}">
                    <with-attribute key="USER_NAME" value="${sysid}">
                        <log>ImportExportPortlet deleting layout for user:  ${USER_NAME}</log>
                        <crn location="${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/delete-layout.crn').toExternalForm())}"/>
                    </with-attribute>
                </when>

                <!--
                 | NB:  permissions and memberships records cannot be deleted directly.
                 | They will be removed, where appropriate, whenever an entity that they
                 | reference is deleted.
                 +-->

                <!-- channels -->
                <when test="${jexl(entityType.equalsIgnoreCase('channel'))}">
                    <with-attribute key="FNAME" value="${sysid}">
                        <log>ImportExportPortlet deleting channel:  ${FNAME}</log>
                        <crn location="${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/delete-channel.crn').toExternalForm())}"/>
                    </with-attribute>
                </when>

                <!-- channel-types -->
                <when test="${jexl(entityType.equalsIgnoreCase('channel-type'))}">
                    <with-attribute key="NAME" value="${sysid}">
                        <log>ImportExportPortlet deleting channel type:  ${req(NAME)}</log>
                        <crn location="${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/delete-channel-type.crn').toExternalForm())}"/>
                    </with-attribute>
                </when>
                                        
                <!-- groups -->
                <when test="${jexl(entityType.equalsIgnoreCase('group'))}">
                    <with-attribute key="GROUP_NAME" value="${sysid}">
                        <log>ImportExportPortlet deleting group:  ${GROUP_NAME}</log>
                        <crn location="${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/delete-group.crn').toExternalForm())}"/>
                    </with-attribute>
                </when>
                                        
                <!-- users -->
                <when test="${jexl(entityType.equalsIgnoreCase('user'))}">
                    <with-attribute key="USER_NAME" value="${sysid}">
                        <log>ImportExportPortlet deleting user:  ${USER_NAME}</log>
                        <crn location="${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/delete-user.crn').toExternalForm())}"/>
                    </with-attribute>
                </when>

                <!-- themes -->
                <when test="${jexl(entityType.equalsIgnoreCase('theme'))}">
                    <with-attribute key="NAME" value="${sysid}">
                        <log>ImportExportPortlet deleting theme:  ${req(NAME)}</log>
                        <crn location="${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/delete-theme.crn').toExternalForm())}"/>
                    </with-attribute>
                </when>

                <!-- structures -->
                <when test="${jexl(entityType.equalsIgnoreCase('structure'))}">
                    <with-attribute key="NAME" value="${sysid}">
                        <log>ImportExportPortlet deleting structure:  ${req(NAME)}</log>
                        <crn location="${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/delete-structure.crn').toExternalForm())}"/>
                    </with-attribute>
                </when>

                <!-- entity-types -->
                <when test="${jexl(entityType.equalsIgnoreCase('entity-type'))}">
                    <with-attribute key="NAME" value="${sysid}">
                        <log>ImportExportPortlet deleting entity type:  ${req(NAME)}</log>
                        <crn location="${groovy(org.jasig.portal.RDBMServices.class.getClassLoader().getResource('/org/jasig/portal/io/delete-entity-type.crn').toExternalForm())}"/>
                    </with-attribute>
                </when>

                <otherwise>
                    <log level="WARN">ImportExportPortlet encountered unknown/unsupported entity type:  '${entityType}'</log>
                </otherwise>

            </choose>

        </sql-transaction>
    </subtasks>
</with>