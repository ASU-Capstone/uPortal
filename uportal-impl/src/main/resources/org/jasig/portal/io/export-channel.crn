<with-attribute key="Attributes.NODE" value="${newDoc(channel-definition)}">
    <echo-ln>Export Channel:  FNAME=${FNAME}</echo-ln>
    <append-node node="${attributeNode(script=classpath://org/jasig/portal/io/import-channel_v3-0.crn)}"/>
    <with-attribute key="CHAN_ID" value="${sql(SELECT MAX(chan_id) FROM up_channel WHERE chan_fname = '${FNAME}')}">
        <choose>
            <when test="${jexl(CHAN_ID == null)}">
                <echo-ln>WARNING:  Channel '${FNAME}' does not exist;  no channel file will be generated.</echo-ln>
                <log logger-name="org.jasig.portal.io.export-channel" level="warn">Channel '${FNAME}' does not exist;  no channel file will be generated.</log>
            </when>
            <otherwise>
                <sql-query>
                    <sql>SELECT * FROM up_channel WHERE chan_id = ?</sql>
                    <parameter value="${CHAN_ID}"/>
                    <subtasks>
                        <!-- Establish basic structure of the document... -->
                        <append-node>
                            <chan-id>${CHAN_ID}</chan-id>
                            <title>${CHAN_TITLE}</title>
                            <name>${CHAN_NAME}</name>
                            <fname>${FNAME}</fname>
                            <desc>${CHAN_DESC}</desc>
                            <class>${CHAN_CLASS}</class>
                            <timeout>${CHAN_TIMEOUT}</timeout>
                            <hasedit>${CHAN_EDITABLE}</hasedit>
                            <hashelp>${CHAN_HAS_HELP}</hashelp>
                            <hasabout>${CHAN_HAS_ABOUT}</hasabout>
                            <secure>${CHAN_SECURE}</secure>
                            <locale>en_US</locale>
                            <categories/>
                            <groups/>
                            <users/>
                            <parameters/>
                        </append-node>
                        <choose>
                            <when test="${jexl(CHAN_TYPE_ID == -1)}">
                                <!-- Custom Channel -->
                                <append-node sibling="${singleNode(desc)}">
                                    <type>Custom</type>
                                </append-node>
                            </when>
                            <otherwise>
                                <!-- Standard Channel Type -->
                                <sql-query>
                                    <sql>SELECT type_name FROM up_chan_type WHERE type_id = ?</sql>
                                    <parameter value="${CHAN_TYPE_ID}"/>
                                    <subtasks>
                                        <append-node sibling="${singleNode(desc)}">
                                            <type>${TYPE_NAME}</type>
                                        </append-node>
                                    </subtasks>
                                </sql-query>
                            </otherwise>
                        </choose>
                    </subtasks>
                </sql-query>
                <sql-query>
                    <sql>
                        SELECT upg.group_name
                        FROM up_group upg LEFT JOIN up_group_membership upgm ON upg.group_id = upgm.group_id
                        WHERE upgm.member_key = ? AND upg.entity_type_id = ? AND upgm.member_is_group = 'F'
                        ORDER BY upg.group_name
                    </sql>
                    <parameter value="${valueOf(chan-id)}"/>
                    <parameter value="${sql(SELECT entity_type_id FROM up_entity_type WHERE entity_type_name = 'org.jasig.portal.ChannelDefinition')}"/>
                    <subtasks>
                        <append-node parent="${singleNode(categories)}">
                            <category>${GROUP_NAME}</category>
                        </append-node>
                    </subtasks>
                </sql-query>
                <!--  Groups and Users  -->
                <with-attribute key="MEMBERSHIPS" value="${crn(find-membership.crn)}">
                    <if test="${groovy(MEMBERSHIPS.size() > 0)}">
                        <for-each items="${MEMBERSHIPS}" attribute-name="CURRENT_MEMBER">
                            <choose>
                                <when test="${groovy(CURRENT_MEMBER == null)}">
                                    <echo-ln>WARNING:  The definition for channel ${FNAME} contained an orphaned record in its SUBSCRIBE permissions, which will be ignored.</echo-ln>
                                    <log logger-name="org.jasig.portal.io.export-channel" level="warn">The definition for channel ${FNAME} contained an orphaned record in its SUBSCRIBE permissions, which will be ignored.</log>
                                </when>
                                <when test="${groovy(CURRENT_MEMBER.isGroup())}">
                                    <with-attribute key="GROUP_NAME" value="${groovy(org.jasig.portal.services.EntityNameFinderService.instance().getNameFinder(CURRENT_MEMBER.getType()).getName(CURRENT_MEMBER.getKey()))}">
                                        <append-node parent="${singleNode(groups)}">
                                            <group>${GROUP_NAME}</group>
                                        </append-node>
                                    </with-attribute>
                                </when>
                                <when test="${groovy(CURRENT_MEMBER.isEntity())}">
                                    <with-attribute key="USER_NAME" value="${groovy(CURRENT_MEMBER.getKey())}">
                                        <if test="${crn(is-user-included.crn)}">
                                            <append-node parent="${singleNode(users)}">
                                                <user>${USER_NAME}</user>
                                            </append-node>
                                        </if>
                                    </with-attribute>
                                </when>
                                <otherwise>
                                    <echo-ln>WARNING:  Subscribed IGroupMember ${CURRENT_MEMBER} is not a group or an entity and will be ignored.</echo-ln>
                                    <log logger-name="org.jasig.portal.io.export-channel" level="warn">Subscribed IGroupMember ${CURRENT_MEMBER} is not a group or an entity and will be ignored.</log>
                                </otherwise>
                            </choose>
                        </for-each>
                    </if>
                </with-attribute>
                <!--  Standard Channel Parameters  -->
                <sql-query>
                    <sql>
                        SELECT * 
                        FROM up_channel_param 
                        WHERE chan_id = ?
                        ORDER BY chan_parm_nm
                    </sql>
                    <parameter value="${CHAN_ID}"/>
                    <subtasks>
                        <if test="${jexl(CHAN_PARM_VAL != null)}">
                            <append-node parent="${singleNode(parameters)}">
                                <parameter>
                                    <name>${CHAN_PARM_NM}</name>
                                    <value>${CHAN_PARM_VAL}</value>
                                    <description></description>
                                    <ovrd>${CHAN_PARM_OVRD}</ovrd>
                                </parameter>
                            </append-node>
                            <if test="${jexl(CHAN_PARM_DESC != null)}">
                                <append-node parent="${singleNode(parameters/parameter[position() = last()]/description)}" node="${textNode(${CHAN_PARM_DESC})}"/>
                            </if>
                        </if>
                    </subtasks>
                </sql-query>
                <!--  Portlet preferences  -->
                <with-attribute key="PORTLET_DEF" value="${groovy(PORTAL_CONTEXT.getBean('portletDefinitionRegistry').getPortletDefinition(CHAN_ID.intValue()))}">
                    <if test="${groovy(PORTLET_DEF != null)}">
                        <for-each items="${groovy(PORTLET_DEF.getPortletPreferences().getPortletPreferences())}" attribute-name="portletPreference">
                            <for-each items="${groovy(Arrays.asList(portletPreference.getValues()))}" attribute-name="preferenceValue">
                                <append-node parent="${singleNode(parameters)}">
                                    <parameter>
                                        <name>PORTLET.${groovy(portletPreference.getName())}</name>
                                        <value>${req(preferenceValue)}</value>
                                        <description></description>
                                        <ovrd>${groovy(portletPreference.isReadOnly() ? "N" : "Y")}</ovrd>
                                    </parameter>
                                </append-node>
                            </for-each>
                        </for-each>
                    </if>
                </with-attribute>
                <with-attribute key="SAFE_FNAME" value="${org.jasig.portal.io.SafeFileNamePhrase(${req(FNAME)})}">
                    <delete-node node="${singleNode(chan-id)}"/>
                    <write-document file="${req(EXPORT_DIR)}/channel/${req(SAFE_FNAME)}.channel"/>
                </with-attribute>
            </otherwise>
        </choose>
    </with-attribute>
</with-attribute>
