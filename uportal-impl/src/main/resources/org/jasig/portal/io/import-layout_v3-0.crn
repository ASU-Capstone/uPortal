<!--

    Copyright (c) 2000-2009, Jasig, Inc.
    See license distributed with this file and available online at
    https://www.ja-sig.org/svn/jasig-parent/tags/rel-10/license-header.txt

-->
<!--
 | NOTICE:  This file represents a contractual API that is leveraged by more 
 | than one caller.  Please do not refactor this file in a way that changes 
 | the number or nature of arguments expected.
 |
 | These are:
 |   - ${Attributes.NODE}=XML Element that defines the entity to import
 |   - ${PORTAL_CONTEXT}=uPortal's Spring ApplicationContext
 |   - ${SqlAttributes.DATA_SOURCE}=the DataSource for the PortalDb
 |   - ${SqlAttributes.TRANSACTION_MANAGER}=PlatformTransactionManager in use
 |   - Settings defined in classpath://properties/db/entities/import.properties
 |
 +-->
<sql-query>
    <sql>
        SELECT USER_ID, USER_NAME
        FROM UP_USER
        WHERE USER_NAME = ?
    </sql>
    <parameter value="${valueOf(@username)}" />
    <subtasks>
        <with>
            <attribute key="LAYOUT_ID">${groovy(1)}</attribute> <!-- TODO eventually support more than just one layout for a user -->
            <attribute key="PROFILE_ID">${groovy(1)}</attribute> <!-- TODO should this be loaded from the template user? -->
            <attribute key="STRUCTURE_STYLESHEET_NAME">${valueOf(profile/structure/@name)}</attribute>
            <attribute key="THEME_STYLESHEET_NAME">${valueOf(profile/theme/@name)}</attribute>
            <subtasks>
                <with>
                    <attribute key="STRUCTURE_STYLESHEET_ID">${crn(lookup-ss_struct_id.crn)}</attribute>
                    <attribute key="THEME_STYLESHEET_ID">${crn(lookup-ss_theme_id.crn)}</attribute>
                    <subtasks>
                        <sql-transaction>
                            <!-- Setup the layout's profile -->
                            <with-attribute key="Attributes.NODE" value="${singleNode(profile)}">
                                <if test="${groovy(Attributes.NODE != null)}">
                                    <sql-statement sql="DELETE FROM up_user_profile WHERE user_id = ?">
                                        <parameter value="${USER_ID}"/>
                                    </sql-statement>
                                    <sql-statement sql="INSERT INTO up_user_profile(user_id, profile_id, profile_name, description, layout_id, structure_ss_id, theme_ss_id) VALUES(?, ?, ?, ?, ?, ?, ?)">
                                        <parameter value="${USER_ID}"/>
                                        <parameter value="${PROFILE_ID}"/>
                                        <parameter value="${valueOf(@name)}"/>
                                        <parameter value="${valueOf(description)}"/>
                                        <parameter value="${LAYOUT_ID}"/>
                                        <parameter value="${groovy(STRUCTURE_STYLESHEET_ID.intValue())}"/>
                                        <parameter value="${groovy(THEME_STYLESHEET_ID.intValue())}"/>
                                    </sql-statement>
                                    <!-- User (Profile) Parameters:  structure... -->
                                    <node-iterator xpath="structure/parameter">
                                        <sql-upsert>
                                            <update-statement>
                                                UPDATE up_ss_user_parm 
                                                SET param_val = ? 
                                                WHERE user_id = ? AND profile_id = ? AND ss_id = ? AND ss_type = 1 AND param_name = ?
                                            </update-statement>
                                            <insert-statement>
                                                INSERT INTO up_ss_user_parm(param_val, user_id, profile_id, ss_id, ss_type, param_name) 
                                                values(?, ?, ?, ?, 1, ?)
                                            </insert-statement>
                                            <parameter value="${valueOf(value)}"/>
                                            <parameter value="${USER_ID}"/>
                                            <parameter value="${PROFILE_ID}"/>
                                            <parameter value="${groovy(STRUCTURE_STYLESHEET_ID.intValue())}"/>
                                            <parameter value="${valueOf(name)}"/>
                                        </sql-upsert>
                                    </node-iterator>
                                    <!-- User (Profile) Parameters:  theme... -->
                                    <node-iterator xpath="theme/parameter">
                                        <sql-upsert sql="">
                                            <update-statement>
                                                UPDATE up_ss_user_parm 
                                                SET param_val = ? 
                                                WHERE user_id = ? AND profile_id = ? AND ss_id = ? AND ss_type = 2 AND param_name = ?
                                            </update-statement>
                                            <insert-statement>
                                                INSERT INTO up_ss_user_parm(param_val, user_id, profile_id, ss_id, ss_type, param_name) 
                                                values(?, ?, ?, ?, 2, ?)
                                            </insert-statement>
                                            <parameter value="${valueOf(value)}"/>
                                            <parameter value="${USER_ID}"/>
                                            <parameter value="${PROFILE_ID}"/>
                                            <parameter value="${groovy(THEME_STYLESHEET_ID.intValue())}"/>
                                            <parameter value="${valueOf(name)}"/>
                                        </sql-upsert>
                                    </node-iterator>
                                </if>
                            </with-attribute>
    
                            <!-- Clear the way by deleting existing layout nodes and ancillary data -->
                            <crn location="delete-layout.crn"/>
                            
                            <with-attribute key="Attributes.NODE" value="${singleNode(root)}">
                                <if test="${groovy(Attributes.NODE != null)}">
                            
                                    <!-- Set the profile id -->
                                    <sql-statement sql="UPDATE UP_USER_PROFILE 
                                                        SET LAYOUT_ID=1 
                                                        WHERE USER_ID=? AND PROFILE_ID=?">
                                        <parameter value="${USER_ID}"/>
                                        <parameter value="${PROFILE_ID}"/>
                                    </sql-statement>
                                    
                                    <sequence sequence-name="STRUCT_ID_SEQ">
                                        <with-attribute key="INIT_STRUCT_ID" value="${crn(import-layout-node.crn)}">
                                            <!-- Layout (itself) -->
                                            <sql-statement sql="INSERT INTO UP_USER_LAYOUT(LAYOUT_TITLE, USER_ID, LAYOUT_ID, INIT_STRUCT_ID) 
                                                                VALUES(?, ?, ?, ?)">
                                                <parameter value="Standard Layout"/><!-- Limited to 15 characters... -->
                                                <parameter value="${USER_ID}"/>
                                                <parameter value="${LAYOUT_ID}"/>
                                                <parameter value="${INIT_STRUCT_ID}"/>
                                            </sql-statement>
                                            
                                            <!-- NEXT_STRUCT_ID column (UP_USER table) -->
                                            <sql-statement sql="UPDATE UP_USER
                                                                SET NEXT_STRUCT_ID = ? 
                                                                WHERE USER_ID = ?">
                                                <parameter value="${sequence(STRUCT_ID_SEQ)}"/>
                                                <parameter value="${USER_ID}"/>
                                            </sql-statement>
                                        </with-attribute>
                                    </sequence>
                                </if>
                            </with-attribute>
                            
                            <!-- Now do portlet entity preferences -->
                            <with-attribute key="Attributes.NODE" value="${singleNode(preferences)}">
                                <if test="${jexl(Attributes.NODE != null)}">
                                    <crn location="import-preferences.crn"/>
                                </if>
                            </with-attribute>

                        </sql-transaction>
                    </subtasks>
                </with>
            </subtasks>
        </with>
    </subtasks>
    <empty-result>
        <echo-ln>WARNING: No user ${valueOf(@username)} exists for corresponding layout. The layout will NOT be imported.</echo-ln>
        <log logger-name="org.jasig.portal.io.import-layout" level="warn">WARNING: No user ${valueOf(@username)} exists for corresponding layout. The layout will NOT be imported.</log>
    </empty-result>
</sql-query>
