<!--

    Licensed to Jasig under one or more contributor license
    agreements. See the NOTICE file distributed with this work
    for additional information regarding copyright ownership.
    Jasig licenses this file to you under the Apache License,
    Version 2.0 (the "License"); you may not use this file
    except in compliance with the License. You may obtain a
    copy of the License at:

    http://www.apache.org/licenses/LICENSE-2.0

    Unless required by applicable law or agreed to in writing,
    software distributed under the License is distributed on
    an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    KIND, either express or implied. See the License for the
    specific language governing permissions and limitations
    under the License.

-->

<with-attribute key="COUNTER" value="${newDoc(counter)}">
    <thread-pool threads="${req(THREAD_COUNT)}">
        <sql-query>
            <sql>SELECT upgm.*, upet.entity_type_name FROM up_group_membership upgm, up_entity_type upet, up_group upg where upgm.group_id = upg.group_id AND upg.entity_type_id = upet.entity_type_id</sql>
            <subtasks>
                <concurrent>
                    <handle-error>
                        <try>
                            <with-attribute key="Attributes.NODE" value="${newDoc(membership)}">
                                <append-node node="${attributeNode(script=classpath://org/jasig/portal/io/import-membership_v2-6.crn)}"/>
                                <with-attribute key="GROUP" value="${groovy(org.jasig.portal.services.GroupService.findGroup('local.' + GROUP_ID))}">
                                    <!-- Check for group name == null (indicates an orphaned record) -->
                                    <choose>
                                        <when test="${jexl(GROUP.getName() == null)}">
                                            <log logger-name="org.jasig.portal.io.export-memberships" level="warn">Membership parent references a deleted group;  removing orphaned reference.</log>
                                            <append-node node="${attributeNode(cancel=true)}"/>
                                        </when>
                                        <otherwise>
                                            <!-- All is well... -->
                                            <append-node>
                                                <parent>${jexl(GROUP.getName())}</parent>
                                            </append-node>
                                        </otherwise>
                                    </choose>
                                </with-attribute>
                                <choose>
                                    <when test="${jexl(MEMBER_IS_GROUP.equals('T'))}">
                                        <with-attribute key="GROUP" value="${groovy(org.jasig.portal.services.GroupService.findGroup(MEMBER_SERVICE + '.' + MEMBER_KEY))}">
                                            <!-- Check for group name == null (indicates an orphaned record) -->
                                            <choose>
                                                <when test="${jexl(GROUP.getName() == null)}">
                                                    <log logger-name="org.jasig.portal.io.export-memberships" level="warn">Membership child references a deleted group;  removing orphaned reference.</log>
                                                    <append-node node="${attributeNode(cancel=true)}"/>
                                                </when>
                                                <otherwise>
                                                    <!-- All is well... -->
                                                    <append-node>
                                                        <child>
                                                            <group>${jexl(GROUP.getName())}</group>
                                                        </child>
                                                    </append-node>
                                                </otherwise>
                                            </choose>
                                        </with-attribute>
                                    </when>
                                    <when test="${jexl(ENTITY_TYPE_NAME.equals('org.jasig.portal.channel.IChannelDefinition'))}">
                                        <with-attribute key="FNAME" value="${sql(SELECT chan_fname FROM up_channel WHERE chan_id = ${req(MEMBER_KEY)})}">
                                            <choose>
                                                <when test="${jexl(FNAME == null)}">
                                                    <log logger-name="org.jasig.portal.io.export-memberships" level="warn">Membership child references a deleted channel;  removing orphaned reference.</log>
                                                    <append-node node="${attributeNode(cancel=true)}"/>
                                                </when>
                                                <otherwise>
                                                    <append-node>
                                                        <child>
                                                            <channel>${req(FNAME)}</channel>
                                                        </child>
                                                    </append-node>
                                                </otherwise>
                                            </choose>
                                        </with-attribute>
                                    </when>
                                    <when test="${jexl(ENTITY_TYPE_NAME.equals('org.jasig.portal.security.IPerson'))}">
                                        <with-attribute key="USER_NAME" value="${MEMBER_KEY}">
                                            <choose>
                                                <when test="${crn(${groovy(PORTAL_CONTEXT.getBean('is-user-included'))})}">
                                                    <append-node>
                                                        <child>
                                                            <literal>${req(USER_NAME)}</literal>
                                                        </child>
                                                    </append-node>
                                                </when>
                                                <otherwise>
                                                    <log logger-name="org.jasig.portal.io.export-memberships" level="warn">user, ${USER_NAME}: Not on included user list, skipping membership export</log>
                                                    <append-node node="${attributeNode(cancel=true)}"/>
                                                </otherwise>
                                            </choose>
                                        </with-attribute>
                                    </when>
                                    <otherwise>
                                        <append-node>
                                            <child>
                                                <literal>${req(MEMBER_KEY)}</literal>
                                            </child>
                                        </append-node>
                                    </otherwise>
                                </choose>
                                <append-node parent="${req(COUNTER)}">
                                    <row/>
                                </append-node>
                                <if test="${jexl(!Attributes.NODE.valueOf('@cancel').equals('true'))}">
                                    <echo-ln>Export Membership:  PARENT=${valueOf(parent)}, CHILD=${valueOf(child/*)}</echo-ln>
                                    
                                    <with-attribute key="SAFE_NAME" value="${org.jasig.portal.io.SafeFileNamePhrase(${valueOf(parent)}__${valueOf(child/*)}-${jexl(COUNTER.valueOf('count(row)'))})}">
                                        <write-document file="${req(EXPORT_DIR)}/membership/${req(SAFE_NAME)}.membership"/>
                                    </with-attribute>
                                </if>
                            </with-attribute>
                        </try>
                        <catch>
                            <echo-ln>ERROR Failed to export group membership for groupId=${GROUP_ID} and memberKey=${MEMBER_KEY} due to exception: ${Attributes.EXCEPTION}</echo-ln>
                            <throw/>
                        </catch>
                    </handle-error>
                </concurrent>
            </subtasks>
        </sql-query>
    </thread-pool>
</with-attribute>